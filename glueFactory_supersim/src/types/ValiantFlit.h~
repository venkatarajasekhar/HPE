/*
 * Copyright (c) 2016, Hewlett-Packard Laboratories, Qi Li
 * See LICENSE file for details
 */
#ifndef TYPES_VALIANTFLIT_H_
#define TYPES_VALIANTFLIT_H_

#include <prim/prim.h>
#include <types/Flit.h>
#include <vector>

class Packet;

// This class is for Valiant routing algorithm where intermediateDone
// denotes if a intermideiate traversal has been done

class ValiantFlit : public Flit {
 public:
  ValiantFlit(u32 _id, bool _isHead, bool _isTail, Packet* _packet);
  virtual ~ValiantFlit();
  bool getIntermediate() const;
  void setIntermediate(bool _intermediate);
  const std::vector<u32>* getIntermediateDst() const;
  void setIntermediateDst(const std::vector<u32>* _address);

 private:
  bool intermediateDone_;
  std::vector<u32>* intermediateDst;
};

#endif  // TYPES_VALIANTFLIT_H_
